OASISFormat: 0.4
Name:        nunchaku
Version:     0.1
Homepage:    https://github.com/nunchaku/nunchaku
Authors:     Simon Cruanes, Jasmin Blanchette
License:     BSD-2-clause
LicenseFile: LICENSE
Plugins:     META (0.3), DevFiles (0.3)
OCamlVersion: >= 4.00.1
BuildTools:  ocamlbuild
FilesAB:     src/main/const.ml.ab
AlphaFeatures: compiled_setup_ml, ocamlbuild_more_args

Synopsis:    A counter-example finder for higher-order logic

XOCamlbuildExtraArgs: "-menhir 'menhir --dump --explain'"

Library "nunchaku_core"
  Path:             src/core/
  Modules:          NunID, NunVar, NunMetaVar, NunLocation, NunIntf, NunUtils,
                    NunTransform, NunType_intf, NunUntypedAST,
                    NunTerm_typed, NunTypeUnify, NunTypeInference,
                    NunProblem, NunTerm_ho, NunFO, NunBuiltin, NunTerm_intf,
                    NunReduce, NunSolver_intf, NunCVC4, NunMonomorphization
  Install:          true
  FindlibName:      nunchaku
  BuildDepends:     containers, containers.sexp, containers.iter,
                    containers.data, sequence, unix

Library "nunchaku_parsers"
  Path:             src/parsers/
  Modules:          NunLexer, NunParser
  Install:          true
  FindlibName:      parsers
  FindlibParent:    nunchaku_core
  BuildTools:       menhir
  BuildDepends:     nunchaku

Executable nunchaku
  Path:             src/main/
  Install:          true
  CompiledObject:   native
  MainIs:           nunchaku.ml
  BuildDepends:     nunchaku, nunchaku.parsers

PreBuildCommand:    make qtest-gen

Executable run_qtest
  Path:             qtest/
  Install:          false
  CompiledObject:   native
  MainIs:           run_qtest.ml
  Build$:           flag(tests)
  BuildDepends:     nunchaku, nunchaku.parsers, oUnit, QTest2Lib

Test all
  Command:      ./run_qtest.native
  TestTools:    run_qtest
  Run$:         flag(tests)

Document nunchaku
  Title:                Documentation of Nunchaku
  Type:                 ocamlbuild (0.3)
  BuildTools+:          ocamldoc
  Build$:               flag(docs)
  Install:              true
  XOCamlbuildPath:      .
  XOCamlbuildExtraArgs:
    "-docflags '-colorize-code -short-functors -charset utf-8'"
  XOCamlbuildLibraries:
    nunchaku, nunchaku.parsers

